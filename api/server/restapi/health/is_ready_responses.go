// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/combust-labs/firebox/api/models"
)

// IsReadyOKCode is the HTTP code returned for type IsReadyOK
const IsReadyOKCode int = 200

/*IsReadyOK healthStatus

swagger:response isReadyOK
*/
type IsReadyOK struct {

	/*
	  In: Body
	*/
	Payload *models.HealthHealthy `json:"body,omitempty"`
}

// NewIsReadyOK creates IsReadyOK with default headers values
func NewIsReadyOK() *IsReadyOK {

	return &IsReadyOK{}
}

// WithPayload adds the payload to the is ready o k response
func (o *IsReadyOK) WithPayload(payload *models.HealthHealthy) *IsReadyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is ready o k response
func (o *IsReadyOK) SetPayload(payload *models.HealthHealthy) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsReadyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IsReadyInternalServerErrorCode is the HTTP code returned for type IsReadyInternalServerError
const IsReadyInternalServerErrorCode int = 500

/*IsReadyInternalServerError The standard error format

swagger:response isReadyInternalServerError
*/
type IsReadyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.StandardError `json:"body,omitempty"`
}

// NewIsReadyInternalServerError creates IsReadyInternalServerError with default headers values
func NewIsReadyInternalServerError() *IsReadyInternalServerError {

	return &IsReadyInternalServerError{}
}

// WithPayload adds the payload to the is ready internal server error response
func (o *IsReadyInternalServerError) WithPayload(payload *models.StandardError) *IsReadyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is ready internal server error response
func (o *IsReadyInternalServerError) SetPayload(payload *models.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsReadyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IsReadyServiceUnavailableCode is the HTTP code returned for type IsReadyServiceUnavailable
const IsReadyServiceUnavailableCode int = 503

/*IsReadyServiceUnavailable healthNotReadyStatus

swagger:response isReadyServiceUnavailable
*/
type IsReadyServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.HealthServiceUnavailable `json:"body,omitempty"`
}

// NewIsReadyServiceUnavailable creates IsReadyServiceUnavailable with default headers values
func NewIsReadyServiceUnavailable() *IsReadyServiceUnavailable {

	return &IsReadyServiceUnavailable{}
}

// WithPayload adds the payload to the is ready service unavailable response
func (o *IsReadyServiceUnavailable) WithPayload(payload *models.HealthServiceUnavailable) *IsReadyServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is ready service unavailable response
func (o *IsReadyServiceUnavailable) SetPayload(payload *models.HealthServiceUnavailable) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsReadyServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
