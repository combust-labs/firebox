// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/combust-labs/firebox/api/models"
)

// IsHealthyOKCode is the HTTP code returned for type IsHealthyOK
const IsHealthyOKCode int = 200

/*IsHealthyOK healthStatus

swagger:response isHealthyOK
*/
type IsHealthyOK struct {

	/*
	  In: Body
	*/
	Payload *models.HealthHealthy `json:"body,omitempty"`
}

// NewIsHealthyOK creates IsHealthyOK with default headers values
func NewIsHealthyOK() *IsHealthyOK {

	return &IsHealthyOK{}
}

// WithPayload adds the payload to the is healthy o k response
func (o *IsHealthyOK) WithPayload(payload *models.HealthHealthy) *IsHealthyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is healthy o k response
func (o *IsHealthyOK) SetPayload(payload *models.HealthHealthy) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsHealthyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IsHealthyInternalServerErrorCode is the HTTP code returned for type IsHealthyInternalServerError
const IsHealthyInternalServerErrorCode int = 500

/*IsHealthyInternalServerError The standard error format

swagger:response isHealthyInternalServerError
*/
type IsHealthyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.StandardError `json:"body,omitempty"`
}

// NewIsHealthyInternalServerError creates IsHealthyInternalServerError with default headers values
func NewIsHealthyInternalServerError() *IsHealthyInternalServerError {

	return &IsHealthyInternalServerError{}
}

// WithPayload adds the payload to the is healthy internal server error response
func (o *IsHealthyInternalServerError) WithPayload(payload *models.StandardError) *IsHealthyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is healthy internal server error response
func (o *IsHealthyInternalServerError) SetPayload(payload *models.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsHealthyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IsHealthyServiceUnavailableCode is the HTTP code returned for type IsHealthyServiceUnavailable
const IsHealthyServiceUnavailableCode int = 503

/*IsHealthyServiceUnavailable healthNotHealthyStatus

swagger:response isHealthyServiceUnavailable
*/
type IsHealthyServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.HealthServiceUnavailable `json:"body,omitempty"`
}

// NewIsHealthyServiceUnavailable creates IsHealthyServiceUnavailable with default headers values
func NewIsHealthyServiceUnavailable() *IsHealthyServiceUnavailable {

	return &IsHealthyServiceUnavailable{}
}

// WithPayload adds the payload to the is healthy service unavailable response
func (o *IsHealthyServiceUnavailable) WithPayload(payload *models.HealthServiceUnavailable) *IsHealthyServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is healthy service unavailable response
func (o *IsHealthyServiceUnavailable) SetPayload(payload *models.HealthServiceUnavailable) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsHealthyServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
